#!/bin/bash

while true
do

# Logo

curl -s https://raw.githubusercontent.com/CosmosElon/valithings/main/logoelon | bash

# Menu

PS3='Select an action: '
options=(
"Install"
"Create wallet"
"Exit")
select opt in "${options[@]}"
do
case $opt in

"Install")
echo "*********************"
echo -e "\e[1m\e[35m		Lets's begin\e[0m"
echo "*********************"
echo -e "\e[1m\e[32m	Enter your Validator_Name:\e[0m"
echo "_|-_|-_|-_|-_|-_|-_|"
read Validator_Name
echo "_|-_|-_|-_|-_|-_|-_|"
echo export Validator_Name=${Validator_Name} >> $HOME/.bash_profile
echo export CHAIN_ID="source" >> $HOME/.bash_profile
source ~/.bash_profile

echo -e "\e[1m\e[32m1. Updating packages and dependencies--> \e[0m" && sleep 1
#UPDATE APT
apt-get update -y && apt-get upgrade -y
apt install software-properties-common nano git make ufw jq -y
sudo apt install snapd
sudo apt-get install gcc -y

echo -e "        \e[1m\e[32m2. Installing GO--> \e[0m" && sleep 1
#INSTALL GO
sudo snap install go --classic && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile && \
source $HOME/.bash_profile && \
go version

echo -e "              \e[1m\e[32m3. Downloading and building binaries--> \e[0m" && sleep 1
#INSTALL
cd $HOME
git clone https://github.com/Source-Protocol-Cosmos/source.git
cd source
git checkout v3.0.0
make install

sourced config chain-id source-1
sourced init $Validator_Name --chain-id source-1

curl -s https://ss.nodeist.net/source/genesis.json > $HOME/.source/config/genesis.json
curl -s https://ss.nodeist.net/source/addrbook.json > $HOME/.source/config/addrbook.json


echo -e "                     \e[1m\e[32m4. Node optimization and improvement--> \e[0m" && sleep 1

sed -i 's|^pruning *=.*|pruning = "custom"|g' $HOME/.source/config/app.toml
sed -i 's|^pruning-keep-recent  *=.*|pruning-keep-recent = "100"|g' $HOME/.source/config/app.toml
sed -i 's|^pruning-interval *=.*|pruning-interval = "10"|g' $HOME/.source/config/app.toml
sed -i 's|^snapshot-interval *=.*|snapshot-interval = 0|g' $HOME/.source/config/app.toml

sed -i 's|^minimum-gas-prices *=.*|minimum-gas-prices = "0.025usource"|g' $HOME/.source/config/app.toml

sudo tee /etc/systemd/system/sourced.service > /dev/null << EOF
[Unit]
Description=source node
After=network-online.target
[Service]
User=$USER
ExecStart=$(which sourced) start
Restart=on-failure
RestartSec=10
LimitNOFILE=10000
[Install]
WantedBy=multi-user.target
EOF

sourced tendermint unsafe-reset-all --home $HOME/.source --keep-addr-book

STATE_SYNC_RPC=https://rpc-source.nodeist.net:443
LATEST_HEIGHT=$(curl -s $STATE_SYNC_RPC/block | jq -r .result.block.header.height)
SYNC_BLOCK_HEIGHT=$(($LATEST_HEIGHT - 1000))
SYNC_BLOCK_HASH=$(curl -s "$STATE_SYNC_RPC/block?height=$SYNC_BLOCK_HEIGHT" | jq -r .result.block_id.hash)

sed -i   -e "s|^enable *=.*|enable = true|"   -e "s|^rpc_servers *=.*|rpc_servers = "$STATE_SYNC_RPC,$STATE_SYNC_RPC"|"   -e "s|^trust_height *=.*|trust_height = $SYNC_BLOCK_HEIGHT|"   -e "s|^trust_hash *=.*|trust_hash = "$SYNC_BLOCK_HASH"|"   $HOME/.source/config/config.toml

# enable service
sudo systemctl daemon-reload
sudo systemctl enable sourced
sudo systemctl restart sourced && sudo journalctl -fu sourced -o cat

echo '=============== SETUP FINISHED ==================='
echo -e 'Congratulations:        \e[1m\e[32mSUCCESSFUL NODE INSTALLATION\e[0m'
echo -e 'To check logs:        \e[1m\e[33mjournalctl -u sourced -f -o cat\e[0m'
echo -e "To check sync status: \e[1m\e[35mcurl -s localhost:26657/status\e[0m"

break
;;
"Create wallet")
echo "_|-_|-_|-_|-_|-_|-_|"
echo -e "      \e[1m\e[35m Your WalletName:\e[0m"
echo "_|-_|-_|-_|-_|-_|-_|"
read Wallet
echo export Wallet=${Wallet} >> $HOME/.bash_profile
source ~/.bash_profile
sourced keys add $Wallet
echo -e "      \e[1m\e[32m!!!!!!!!!SAVE!!!!!!!!!!!!!!!!SAVE YOUR MNEMONIC PHRASE!!!!!!!!!SAVE!!!!!!!!!!!!!!!!\e[0m'"

break
;;
"Exit")
exit
esac
done
done
